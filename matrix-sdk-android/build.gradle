apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'
apply plugin: 'realm-android'
apply plugin: 'maven-publish'

if (project.hasProperty("coverage")) {
    apply plugin: 'jacoco'
}

buildscript {
    repositories {
        // Do not use `mavenCentral()`, it prevents Dependabot from working properly
        maven {
            url 'https://repo1.maven.org/maven2'
        }
    }
    dependencies {
        classpath "io.realm:realm-gradle-plugin:10.16.0"
    }
}

android {
    namespace "org.matrix.android.sdk"

    testOptions.unitTests.includeAndroidResources = true

    compileSdk 34

    defaultConfig {
        minSdk 24
        targetSdk 34

        // Multidex is useful for tests
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // The following argument makes the Android Test Orchestrator run its
        // "pm clear" command after each test invocation. This command ensures
        // that the app's state is completely cleared between tests.
        testInstrumentationRunnerArguments clearPackageData: 'true'

        // WARNING: always restore this line after importing code from Element Android (2/2)
        buildConfigField "String", "SDK_VERSION", "\"${project.getProperties().getOrDefault("VERSION_NAME", "0.0.0")}\""

        buildConfigField "String", "GIT_SDK_REVISION", "\"${gitRevision()}\""
        buildConfigField "String", "GIT_SDK_REVISION_UNIX_DATE", "\"${gitRevisionUnixDate()}\""
        buildConfigField "String", "GIT_SDK_REVISION_DATE", "\"${gitRevisionDate()}\""

        defaultConfig {
            consumerProguardFiles 'proguard-rules.pro'
        }
    }

    testOptions {
        // Comment to run on Android 12
//        execution 'ANDROIDX_TEST_ORCHESTRATOR'
    }

    buildFeatures {
        buildConfig true
    }

    buildTypes {
        debug {
            if (project.hasProperty("coverage")) {
                testCoverageEnabled = coverage == "true"
            }
            // Set to true to log privacy or sensible data, such as token
            buildConfigField "boolean", "LOG_PRIVATE_DATA", project.property("vector.debugPrivateData")
            // Set to BODY instead of NONE to enable logging
            buildConfigField "okhttp3.logging.HttpLoggingInterceptor.Level", "OKHTTP_LOGGING_LEVEL", "okhttp3.logging.HttpLoggingInterceptor.Level." + project.property("vector.httpLogLevel")
        }

        release {
            buildConfigField "boolean", "LOG_PRIVATE_DATA", "false"
            buildConfigField "okhttp3.logging.HttpLoggingInterceptor.Level", "OKHTTP_LOGGING_LEVEL", "okhttp3.logging.HttpLoggingInterceptor.Level.BASIC"
        }
    }

    adbOptions {
        installOptions "-g"
//        timeOutInMs 350 * 1000
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlin {
        jvmToolchain(17)
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17.toString()
        freeCompilerArgs += [
                // Disabled for now, there are too many errors. Could be handled in another dedicated PR
                // '-Xexplicit-api=strict', // or warning
                "-opt-in=kotlin.RequiresOptIn",
                // Opt in for kotlinx.coroutines.FlowPreview
                "-opt-in=kotlinx.coroutines.FlowPreview",
        ]
    }

    sourceSets {
        androidTest {
            java.srcDirs += "src/sharedTest/java"
        }
        test {
            java.srcDirs += "src/sharedTest/java"
        }
    }

    publishing {
        singleVariant("release") {
            withSourcesJar()
        }
    }

    packaging {
        resources.excludes.addAll(
                "META-INF/LICENSE.md",
                "META-INF/LICENSE-notice.md"
        )
    }
}

static def gitRevision() {
    def cmd = "git rev-parse --short=8 HEAD"
    return cmd.execute().text.trim()
}

static def gitRevisionUnixDate() {
    def cmd = "git show -s --format=%ct HEAD^{commit}"
    return cmd.execute().text.trim()
}

static def gitRevisionDate() {
    def cmd = "git show -s --format=%ci HEAD^{commit}"
    return cmd.execute().text.trim()
}

configurations.configureEach {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

dependencies {
    def coroutines = "1.8.0"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines"

    //   implementation libs.androidx.appCompat
    api 'androidx.core:core-ktx:1.13.1'

    // Lifecycle
    def lifecycle = "2.7.0"
    api "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle"
    api "androidx.lifecycle:lifecycle-common:$lifecycle"
    api "androidx.lifecycle:lifecycle-process:$lifecycle"

    // Network
    def retrofit = '2.11.0'
    api "com.squareup.retrofit2:retrofit:$retrofit"
    api "com.squareup.retrofit2:converter-moshi:$retrofit"

    // When version of okhttp is updated (current is 4.9.3), consider removing the workaround
    // to force usage of Protocol.HTTP_1_1. Check the status of:
    // - https://github.com/square/okhttp/issues/3278
    // - https://github.com/square/okhttp/issues/4455
    // - https://github.com/square/okhttp/issues/3146
    //Do not use bom for publishing
    def okhttp_version = "4.12.0"
    api "com.squareup.okhttp3:okhttp:$okhttp_version"
    api "com.squareup.okhttp3:logging-interceptor:$okhttp_version"

    def moshi = "1.15.1"
    api "com.squareup.moshi:moshi:$moshi"
    api "com.squareup.moshi:moshi-adapters:$moshi"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshi"

    api "com.atlassian.commonmark:commonmark:0.13.0"

    // Image
    api 'androidx.exifinterface:exifinterface:1.3.7'

    // Database
    api 'com.github.Zhuinden:realm-monarchy:0.7.1'

    kapt 'dk.ilios:realmfieldnameshelper:2.0.0'

    // Shared Preferences
    api 'androidx.preference:preference-ktx:1.2.1'

    // Work
    api 'androidx.work:work-runtime-ktx:2.9.0'

    // olm lib is now hosted in MavenCentral
    api 'org.matrix.android:olm-sdk:3.2.12'

    // DI
    def dagger = "2.51.1"
    api "com.google.dagger:dagger:$dagger"
    kapt "com.google.dagger:dagger-compiler:$dagger"

    // Logging
    api "com.jakewharton.timber:timber:5.0.1"

    // Video compression
    api 'com.otaliastudios:transcoder:0.10.5'

    // Exif data handling
    api "org.apache.commons:commons-imaging:1.0-alpha3"

    api 'com.googlecode.libphonenumber:libphonenumber:8.13.36'

    // ----- Jitpack release
    api("org.futo.gitlab.circles:circles-rust-components-kotlin:v0.3.15.8@aar") {
        transitive = true
    }
    // ----- Maven local testing
    //api "org.futo.gitlab.circles:crypto-android:0.1"
    // ------

    testImplementation "junit:junit:4.13.2"
    // Note: version sticks to 1.9.2 due to https://github.com/mockk/mockk/issues/281
    def mockk = '1.13.10'
    testImplementation "io.mockk:mockk:$mockk"
    testImplementation 'org.amshove.kluent:kluent-android:1.73'
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.8.0"
    // Plant Timber tree for test
    testImplementation 'net.lachlanmckee:timber-junit-rule:1.0.1'
    // Transitively required for mocking realm as monarchy doesn't expose Rx
    testImplementation "io.reactivex.rxjava2:rxkotlin:2.4.0"

    kaptAndroidTest "com.google.dagger:dagger-compiler:$dagger"
    androidTestImplementation "androidx.test:core:1.5.0"
    androidTestImplementation "androidx.test:runner:1.5.2"
    androidTestImplementation "androidx.test:rules:1.5.0"
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation "androidx.test.espresso:espresso-core:3.5.1"
    androidTestImplementation 'org.amshove.kluent:kluent-android:1.73'
    androidTestImplementation "io.mockk:mockk-android:$mockk"
    androidTestImplementation "androidx.arch.core:core-testing:2.2.0"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines"

    // Plant Timber tree for test
    androidTestImplementation "net.lachlanmckee:timber-junit-rule:1.0.1"

    androidTestUtil "androidx.test:orchestrator:1.4.2"
}

publishing {
    publications {
        release(MavenPublication) {
            groupId = "org.futo.gitlab.circles"
            artifactId = "matrix-android-sdk"
            version = "1.6.10.36"

            afterEvaluate {
                from components.release
            }
        }
    }
}
